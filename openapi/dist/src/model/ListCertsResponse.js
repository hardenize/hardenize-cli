/**
 * Hardenize Org API
 * Hardenize is a platform for continuous monitoring of network and security configuration. Hardenize supports individual accounts, intended for use by a single person, and organization accounts, which are shared among potentially many individuals. Whereas individual accounts are limited, organization accounts can have access to all Hardenize features. The Organization API, documented here, provides ability to manage and retrieve information from organization accounts.  At this time, because we're still developing these APIs, they are not enabled by default for all organizations. Please contact us so that we can enable the APIs for you. After that you'll be able to generate your API credentials in the Settings section.  **This specification is a work in progress and may change without notice.** 
 *
 * OpenAPI spec version: 0.4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Cert'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Cert'));
  } else {
    // Browser globals (root is window)
    if (!root.HardenizeOrgApi) {
      root.HardenizeOrgApi = {};
    }
    root.HardenizeOrgApi.ListCertsResponse = factory(root.HardenizeOrgApi.ApiClient, root.HardenizeOrgApi.Cert);
  }
}(this, function(ApiClient, Cert) {
  'use strict';




  /**
   * The ListCertsResponse model module.
   * @module model/ListCertsResponse
   * @version 0.4.0
   */

  /**
   * Constructs a new <code>ListCertsResponse</code>.
   * @alias module:model/ListCertsResponse
   * @class
   * @param certs {Array.<module:model/Cert>} 
   */
  var exports = function(certs) {
    var _this = this;

    _this['certs'] = certs;
  };

  /**
   * Constructs a <code>ListCertsResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ListCertsResponse} obj Optional instance to populate.
   * @return {module:model/ListCertsResponse} The populated <code>ListCertsResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('certs')) {
        obj['certs'] = ApiClient.convertToType(data['certs'], [Cert]);
      }
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/Cert>} certs
   */
  exports.prototype['certs'] = undefined;



  return exports;
}));


