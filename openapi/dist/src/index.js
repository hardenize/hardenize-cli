/**
 * Hardenize Org API
 * Hardenize is a platform for continuous monitoring of network and security configuration. Hardenize supports individual accounts, intended for use by a single person, and organization accounts, which are shared among potentially many individuals. Whereas individual accounts are limited, organization accounts can have access to all Hardenize features. The Organization API, documented here, provides ability to manage and retrieve information from organization accounts.  At this time, because we're still developing these APIs, they are not enabled by default for all organizations. Please contact us so that we can enable the APIs for you. After that you'll be able to generate your API credentials in the Settings section.  **This specification is a work in progress and may change without notice.** 
 *
 * OpenAPI spec version: 0.1.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Cert', 'model/CertCtLog', 'model/ErrorMessage', 'model/ErrorResponse', 'model/GetCertResponse', 'model/ListCertsResponse', 'api/CertificatesApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Cert'), require('./model/CertCtLog'), require('./model/ErrorMessage'), require('./model/ErrorResponse'), require('./model/GetCertResponse'), require('./model/ListCertsResponse'), require('./api/CertificatesApi'));
  }
}(function(ApiClient, Cert, CertCtLog, ErrorMessage, ErrorResponse, GetCertResponse, ListCertsResponse, CertificatesApi) {
  'use strict';

  /**
   * Hardenize_is_a_platform_for_continuous_monitoring_of_networkand_security_configuration__Hardenize_supports_individual_accountsintended_for_use_by_a_single_person_and_organization_accounts_whichare_shared_among_potentially_many_individuals__Whereas_individualaccounts_are_limited_organization_accounts_can_have_access_to_allHardenize_features__The_Organization_API_documented_here_providesability_to_manage_and_retrieve_information_from_organization_accounts_At_this_time_because_were_still_developing_these_APIs_they_are_notenabled_by_default_for_all_organizations__Please_contact_us_so_thatwe_can_enable_the_APIs_for_you__After_that_youll_be_able_to_generateyour_API_credentials_in_the_Settings_section_This_specification_is_a_work_in_progress_and_may_change_without_notice_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var HardenizeOrgApi = require('index'); // See note below*.
   * var xxxSvc = new HardenizeOrgApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new HardenizeOrgApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new HardenizeOrgApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new HardenizeOrgApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.1.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Cert model constructor.
     * @property {module:model/Cert}
     */
    Cert: Cert,
    /**
     * The CertCtLog model constructor.
     * @property {module:model/CertCtLog}
     */
    CertCtLog: CertCtLog,
    /**
     * The ErrorMessage model constructor.
     * @property {module:model/ErrorMessage}
     */
    ErrorMessage: ErrorMessage,
    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse: ErrorResponse,
    /**
     * The GetCertResponse model constructor.
     * @property {module:model/GetCertResponse}
     */
    GetCertResponse: GetCertResponse,
    /**
     * The ListCertsResponse model constructor.
     * @property {module:model/ListCertsResponse}
     */
    ListCertsResponse: ListCertsResponse,
    /**
     * The CertificatesApi service constructor.
     * @property {module:api/CertificatesApi}
     */
    CertificatesApi: CertificatesApi
  };

  return exports;
}));
